// Generated by CoffeeScript 1.10.0
(function() {
  var fs, nodefn, opts, path, rimraf, test_path, test_template_path, tpl;

  path = require('path');

  rimraf = require('rimraf');

  fs = require('fs');

  nodefn = require('when/node');

  test_template_path = path.resolve(_path, '../..');

  test_path = path.join(__dirname, 'tmp');

  tpl = 'sprout-static-cms';

  opts = {
    locals: locals,
    verbose: true
  };

  before(function(done) {
    return sprout.add(tpl, test_template_path, {
      verbose: true
    }).then(function() {
      return rimraf.sync(test_path);
    }).then(function() {
      return sprout.init(tpl, test_path, opts);
    }).done(function() {
      return done();
    });
  });

  after(function() {
    return sprout.remove(tpl).then(function() {
      return rimraf.sync(test_path);
    });
  });

  describe('sprout-static-cms', function() {
    it('should load the correct values into contentful.coffee', function(done) {
      return nodefn.call(fs.readFile, path.join(test_path, 'contentful.coffee'), 'utf8').then(function(res) {
        expect(res).to.have.string("access_token: '" + locals.delivery_token + "'");
        expect(res).to.have.string("management_token: '" + locals.management_token + "'");
        return expect(res).to.have.string("space_id: '" + locals.space_id + "'");
      }).then(function() {
        return done();
      })["catch"](done);
    });
    it('should load the correct values into package.json', function() {
      var pkg;
      pkg = require(path.join(test_path, 'package.json'));
      expect(pkg.name).to.equal(locals.name);
      return expect(pkg.description).to.equal(locals.description);
    });
    return it('should load the correct values in the ship file', function(done) {
      return nodefn.call(fs.readFile, path.join(test_path, 'ship.conf'), 'utf8').then(function(res) {
        expect(res).to.have.string("name: '" + locals.name + "'");
        return expect(res).to.have.string("access_token: '" + locals.netlify_token + "'");
      }).then(function() {
        return done();
      })["catch"](done);
    });
  });

}).call(this);
